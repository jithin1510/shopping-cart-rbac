{
  "/cart": {
    "get": {
      "tags": ["Cart"],
      "summary": "Get user's cart",
      "description": "Retrieves the current user's shopping cart",
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "responses": {
        "200": {
          "description": "User's cart",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cart"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "500": {
          "description": "Server error"
        }
      }
    },
    "post": {
      "tags": ["Cart"],
      "summary": "Add to cart",
      "description": "Adds a product to the user's cart",
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string",
                  "example": "60d0fe4f5311236168a109cd"
                },
                "quantity": {
                  "type": "integer",
                  "example": 1
                }
              },
              "required": ["productId", "quantity"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Product added to cart",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cart"
              }
            }
          }
        },
        "400": {
          "description": "Bad request - Invalid product or quantity"
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Product not found"
        },
        "500": {
          "description": "Server error"
        }
      }
    },
    "delete": {
      "tags": ["Cart"],
      "summary": "Clear cart",
      "description": "Removes all items from the user's cart",
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "responses": {
        "200": {
          "description": "Cart cleared successfully"
        },
        "401": {
          "description": "Unauthorized"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  },
  "/cart/{productId}": {
    "delete": {
      "tags": ["Cart"],
      "summary": "Remove from cart",
      "description": "Removes a product from the user's cart",
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "parameters": [
        {
          "name": "productId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Product ID to remove"
        }
      ],
      "responses": {
        "200": {
          "description": "Product removed from cart",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cart"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Product not found in cart"
        },
        "500": {
          "description": "Server error"
        }
      }
    },
    "patch": {
      "tags": ["Cart"],
      "summary": "Update cart item",
      "description": "Updates the quantity of a product in the cart",
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "parameters": [
        {
          "name": "productId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Product ID to update"
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "quantity": {
                  "type": "integer",
                  "example": 2
                }
              },
              "required": ["quantity"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Cart item updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cart"
              }
            }
          }
        },
        "400": {
          "description": "Bad request - Invalid quantity"
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Product not found in cart"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  },
  "/orders": {
    "get": {
      "tags": ["Orders"],
      "summary": "Get user's orders",
      "description": "Retrieves orders for the current user",
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "responses": {
        "200": {
          "description": "List of orders",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "500": {
          "description": "Server error"
        }
      }
    },
    "post": {
      "tags": ["Orders"],
      "summary": "Create order",
      "description": "Creates a new order from the user's cart",
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "shippingAddress": {
                  "type": "string",
                  "example": "60d0fe4f5311236168a109ce"
                }
              },
              "required": ["shippingAddress"]
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Order created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "400": {
          "description": "Bad request - Empty cart or invalid address"
        },
        "401": {
          "description": "Unauthorized"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  },
  "/orders/{id}": {
    "get": {
      "tags": ["Orders"],
      "summary": "Get order by ID",
      "description": "Retrieves order details by ID",
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Order ID"
        }
      ],
      "responses": {
        "200": {
          "description": "Order details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden - Not the order owner or admin"
        },
        "404": {
          "description": "Order not found"
        },
        "500": {
          "description": "Server error"
        }
      }
    },
    "patch": {
      "tags": ["Orders"],
      "summary": "Update order status",
      "description": "Updates the status of an order (admin only)",
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Order ID"
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["pending", "processing", "shipped", "delivered", "cancelled"],
                  "example": "processing"
                }
              },
              "required": ["status"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Order status updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "400": {
          "description": "Bad request - Invalid status"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden - Not an admin"
        },
        "404": {
          "description": "Order not found"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  },
  "/orders/admin": {
    "get": {
      "tags": ["Orders"],
      "summary": "Get all orders",
      "description": "Retrieves all orders (admin only)",
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "responses": {
        "200": {
          "description": "List of all orders",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden - Not an admin"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  }
}