{
  "/auth/signup": {
    "post": {
      "tags": ["Auth"],
      "summary": "Register a new user",
      "description": "Creates a new user account with customer or vendor role",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "john@example.com"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "example": "Password123"
                },
                "role": {
                  "type": "string",
                  "enum": ["customer", "vendor"],
                  "example": "customer"
                }
              },
              "required": ["name", "email", "password"]
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "User created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "400": {
          "description": "Bad request - User already exists or invalid input"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  },
  "/auth/login": {
    "post": {
      "tags": ["Auth"],
      "summary": "Login user",
      "description": "Authenticates a user and returns user details with JWT token in cookie",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "john@example.com"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "example": "Password123"
                }
              },
              "required": ["email", "password"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Login successful",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "404": {
          "description": "Invalid credentials"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  },
  "/auth/verify-otp": {
    "post": {
      "tags": ["Auth"],
      "summary": "Verify OTP",
      "description": "Verifies the OTP sent to user's email",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "example": "60d0fe4f5311236168a109ca"
                },
                "otp": {
                  "type": "string",
                  "example": "123456"
                }
              },
              "required": ["userId", "otp"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OTP verified successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "400": {
          "description": "Invalid or expired OTP"
        },
        "404": {
          "description": "User or OTP not found"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  },
  "/auth/resend-otp": {
    "post": {
      "tags": ["Auth"],
      "summary": "Resend OTP",
      "description": "Resends OTP to user's email",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string",
                  "example": "60d0fe4f5311236168a109ca"
                }
              },
              "required": ["user"]
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "OTP sent successfully"
        },
        "404": {
          "description": "User not found"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  },
  "/auth/forgot-password": {
    "post": {
      "tags": ["Auth"],
      "summary": "Forgot password",
      "description": "Sends password reset link to user's email",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "john@example.com"
                }
              },
              "required": ["email"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Password reset link sent successfully"
        },
        "404": {
          "description": "Email not found"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  },
  "/auth/reset-password": {
    "post": {
      "tags": ["Auth"],
      "summary": "Reset password",
      "description": "Resets user password using token from email",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "example": "60d0fe4f5311236168a109ca"
                },
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "example": "NewPassword123"
                }
              },
              "required": ["userId", "token", "password"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Password updated successfully"
        },
        "404": {
          "description": "Invalid or expired reset link"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  },
  "/auth/logout": {
    "get": {
      "tags": ["Auth"],
      "summary": "Logout user",
      "description": "Logs out the user by clearing the JWT token cookie",
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "responses": {
        "200": {
          "description": "Logout successful"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  },
  "/auth/check-auth": {
    "get": {
      "tags": ["Auth"],
      "summary": "Check authentication",
      "description": "Checks if the user is authenticated",
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "responses": {
        "200": {
          "description": "User is authenticated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  }
}